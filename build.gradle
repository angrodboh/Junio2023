/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.3.3/userguide/building_java_projects.html
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
 
    //A�ado el plugin para eclipse
    id 'eclipse'
    //para poder publicar paquetes en github
    id 'maven-publish'
    //Plugin para an�lisis est�tico de c�digo
    id "nebula.lint" version "17.7.0"
}
version = '0.0'
tasks.withType(JavaCompile) {
    //A�adir la opci�n Xlint
    options.deprecation = true
    options.encoding = 'ISO-8859-1'
}

tasks.withType(Javadoc){
  
    description = "Genera la documentaci�n"
    //indicar que la codificaci�n es ISO
    options.encoding = 'ISO-8859-1'
    options.charSet = 'ISO-8859-1'
    options.author = true
    options.version = true
    options.use = true
    options.memberLevel = JavadocMemberLevel.PROTECTED
    options.footer = "MIT-FS: Curso 2022/23"
    title = "Junio2023"    
}


task defaultProperties { 
    println "Project: $project" 
    println "Name: $name" 
    println "Path: $path" 
    println "Project directory: $projectDir" 
    println "Build directory: $buildDir" 
    println "Version: $version" 
    println "Group: $project.group" 
    println "Description: $project.description" 
    println "Level: $logging.level" 
}
repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'
    //A�ado la dependencia de la librer�a github que vamos a usar
  
    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:30.1.1-jre'
    //A�ado para usar mockito
    //JAVADOC: https://javadoc.io/doc/org.mockito/mockito-core/4.3.1/overview-summary.html
    testImplementation 'org.mockito:mockito-core:4.3.1'
    // https://mvnrepository.com/artifact/org.mockito/mockito-junit-jupiter
    //JAVADOC: https://javadoc.io/doc/org.mockito/mockito-junit-jupiter/latest/index.html
    testImplementation 'org.mockito:mockito-junit-jupiter:4.3.1'
 
    testImplementation(platform('org.junit:junit-bom:5.8.2'))
    //JAVADOC: https://www.javadoc.io/doc/org.junit.jupiter/junit-jupiter-api/latest/index.html
    testImplementation('org.junit.jupiter:junit-jupiter')

}

test {
	useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed"
	}
}


publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/angrodboh/Junio2023")         
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_LOGIN")
                password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_PACKAGES")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
         //Del tutorial https://docs.gradle.org/current/userguide/publishing_maven.html#publishing_maven
        
            groupId = 'muit.fs.junio22'
            artifactId = 'junio2023'
            version = '0.0'

            from components.java
        }
       
    }
}

